"use strict";(self.webpackChunkashvin=self.webpackChunkashvin||[]).push([[347],{2129:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"sdan-ztnet-install","metadata":{"permalink":"/ashvindocs/blog/sdan-ztnet-install","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-09-04-sdwan/index.md","source":"@site/blog/2023-09-04-sdwan/index.md","title":"TP2-2 Installation du SDWAN ZTNET","description":"ZTNET","date":"2023-09-04T00:00:00.000Z","formattedDate":"September 4, 2023","tags":[{"label":"sdwan","permalink":"/ashvindocs/blog/tags/sdwan"},{"label":"zeronet","permalink":"/ashvindocs/blog/tags/zeronet"},{"label":"ztnet","permalink":"/ashvindocs/blog/tags/ztnet"}],"readingTime":2.26,"hasTruncateMarker":false,"authors":[{"name":"PANCHOO Ashvin","title":"Etudiant en R\xe9seaux et T\xe9l\xe9coms","url":"https://github.com/apanchoo","imageURL":"https://github.com/apanchoo.png","key":"ashvin"},{"name":"NANY Emerick","title":"Etudiant en R\xe9seaux et T\xe9l\xe9coms","url":"https://github.com/bleach100","imageURL":"https://github.com/bleach100.png","key":"emerick"}],"frontMatter":{"slug":"sdan-ztnet-install","title":"TP2-2 Installation du SDWAN ZTNET","authors":["ashvin","emerick"],"tags":["sdwan","zeronet","ztnet"]}},"content":"![ZTNET](https://media.licdn.com/dms/image/D5612AQGy22EBZBsKVg/article-cover_image-shrink_720_1280/0/1664574726727?e=2147483647&v=beta&t=eneK67yR1y49qXq2HRQev_651XodTDnSWA1ODov78F8)\\n## Pr\xe9sentation\\nZTNET est une solution SD-WAN qui permet aux organisations de d\xe9ployer facilement des r\xe9seaux d\xe9finis par logiciel. Cette documentation vise \xe0 guider les utilisateurs \xe0 travers le processus d\'installation de ZTNET sur une machine virtuelle (VM) Ubuntu en utilisant Docker, une plateforme de conteneurisation. En suivant ces \xe9tapes, les utilisateurs pourront mettre en place une instance ZTNET et acc\xe9der \xe0 son interface web pour g\xe9rer leurs r\xe9seaux.\\n## Pr\xe9requis\\n- Une VM Ubuntu Server.\\n- Docker install\xe9.\\n\\n## \xc9tapes d\'installation\\n\\n### a. Cr\xe9ez le fichier docker-compose\\n1. Cr\xe9ez un fichier appel\xe9 `docker-compose.yml`.\\n2. Copiez et collez le contenu fourni ci-dessus dans ce fichier.\\n```yml\\nversion: \\"3.1\\"\\nservices:\\n  postgres:\\n    image: postgres:15.2-alpine\\n    container_name: postgres\\n    restart: unless-stopped\\n    environment:\\n      POSTGRES_USER: postgres\\n      POSTGRES_PASSWORD: postgres\\n      POSTGRES_DB: ztnet\\n    volumes:\\n      - postgres-data:/var/lib/postgresql/data\\n    networks:\\n      - app-network\\n\\n  zerotier:\\n    image: zyclonite/zerotier:1.10.6\\n    hostname: zerotier\\n    container_name: zerotier\\n    restart: unless-stopped\\n    volumes:\\n      - zerotier:/var/lib/zerotier-one\\n    cap_add:\\n      - NET_ADMIN\\n      - SYS_ADMIN\\n    devices:\\n      - /dev/net/tun:/dev/net/tun\\n    networks:\\n      - app-network\\n    ports:\\n      - \\"9993:9993/udp\\"\\n    environment:\\n      - ZT_OVERRIDE_LOCAL_CONF=true\\n      - ZT_ALLOW_MANAGEMENT_FROM=172.31.255.0/29\\n\\n  ztnet:\\n    image: sinamics/ztnet:latest\\n    container_name: ztnet\\n    working_dir: /app\\n    volumes:\\n      - zerotier:/var/lib/zerotier-one\\n    restart: unless-stopped\\n    ports:\\n      - 3000:3000\\n    environment:\\n      POSTGRES_HOST: postgres\\n      POSTGRES_PORT: 5432\\n      POSTGRES_USER: postgres\\n      POSTGRES_PASSWORD: postgres\\n      POSTGRES_DB: ztnet\\n      NEXTAUTH_URL: \\"http://localhost:3000\\"\\n      NEXTAUTH_SECRET: \\"random_secret\\"\\n    networks:\\n      - app-network\\n    links:\\n      - postgres\\n    depends_on:\\n      - postgres\\n      - zerotier\\nvolumes:\\n  zerotier:\\n  postgres-data:\\n\\nnetworks:\\n  app-network:\\n    driver: bridge\\n    ipam:\\n      driver: default\\n      config:\\n        - subnet: 172.31.255.0/29\\n```\\n\\n### b. Lancer ZTNET\\n1. Ouvrez un terminal.\\n2. Naviguez vers le r\xe9pertoire o\xf9 se trouve le fichier `docker-compose.yml`.\\n3. Ex\xe9cutez la commande:\\n   ```bash\\n   docker-compose up -d\\n   ```\\n4. Une fois l\'action termin\xe9e, ouvrez un navigateur et visitez `http://localhost:3000` pour acc\xe9der \xe0 l\'interface web ZTNET.\\n\\n### c. Premi\xe8re connexion\\n- Lors de la premi\xe8re inscription sur l\'interface ZTNET, le premier utilisateur enregistr\xe9 obtiendra automatiquement les privil\xe8ges d\'administrateur. \\n\\n## Points \xe0 noter\\n- En tant qu\'administrateur, vous avez des capacit\xe9s uniques non disponibles pour les utilisateurs normaux, telles que la capacit\xe9 de voir tous les comptes enregistr\xe9s sur le contr\xf4leur.\\n- Les administrateurs ne peuvent pas interagir ou modifier directement les r\xe9seaux des autres utilisateurs.\\n\\n## Variables d\'environnement\\n1. Vous pouvez personnaliser plusieurs variables d\'environnement incluses dans le fichier `docker-compose.yml` selon vos besoins.\\n2. Les variables comme `POSTGRES_HOST`, `POSTGRES_PORT`, etc., sont associ\xe9es \xe0 la base de donn\xe9es PostgreSQL et \xe0 NextAuth pour l\'authentification.\\n3. Pour modifier ces valeurs, mettez simplement \xe0 jour la variable d\'environnement correspondante dans le fichier `docker-compose.yml`.\\n4. Il est conseill\xe9 de ne pas modifier les variables d\'environnement syst\xe9miques utilis\xe9es par le service ZeroTier, sauf si vous savez ce que vous faites.\\n\\n## Conclusion\\nEn suivant ces \xe9tapes, vous aurez configur\xe9 et lanc\xe9 ZTNET sur votre VM Ubuntu. Assurez-vous de bien g\xe9rer les privil\xe8ges administratifs et de comprendre l\'impact des modifications apport\xe9es aux variables d\'environnement pour garantir le fonctionnement optimal de votre installation."}]}')}}]);